{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","views/dashboard/Dashboard.js"],"names":["_unsupportedIterableToArray","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","Array","from","test","_arrayLikeToArray","arr","len","length","i","arr2","_slicedToArray","isArray","Symbol","iterator","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","err","unsupportedIterableToArray","TypeError","_toConsumableArray","arrayLikeToArray","iter","WidgetsDropdown","lazy","ongoingProjects","id","projectType","projectIdentifier","vacancy","status","inbox","user","daysAgo","message","outbox","getBadge","fields","inboxFields","outboxFields","Dashboard","counter","useState","createProjectModal","setCreateProjectModal","rejectRequestModal","setRejectRequestModal","projectTitle","setProjectTitle","setProjectType","setProjectIdentifier","teamSize","setTeamSize","setSkills","setDeadline","description","setDescription","selectedRequestId","setSelectedRequestId","toasts","setToasts","position","autohide","autohideValue","closeButton","fade","toastMessage","setToastMessage","addToast","toasters","reduce","toast","history","useHistory","pageChangeProject","pageChangeMyProject","keys","map","toasterKey","key","show","style","backgroundColor","color","col","sm","md","xl","block","onClick","items","striped","itemsPerPage","pagination","scopedSlots","item","variant","className","src","alt","l","filter","onClose","size","rejectRequest","type","placeholder","autoComplete","onChange","event","target","label","console","log","newProject","unshift"],"mappings":"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","file":"static/js/7.ad209b15.chunk.js","sourcesContent":["import arrayLikeToArray from \"./arrayLikeToArray\";\r\nexport default function _unsupportedIterableToArray(o, minLen) {\r\n  if (!o) return;\r\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\r\n  var n = Object.prototype.toString.call(o).slice(8, -1);\r\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\r\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\r\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\r\n}","export default function _arrayLikeToArray(arr, len) {\r\n  if (len == null || len > arr.length) len = arr.length;\r\n\r\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\r\n    arr2[i] = arr[i];\r\n  }\r\n\r\n  return arr2;\r\n}","import arrayWithHoles from \"./arrayWithHoles\";\r\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\r\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\r\nimport nonIterableRest from \"./nonIterableRest\";\r\nexport default function _slicedToArray(arr, i) {\r\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\r\n}","export default function _arrayWithHoles(arr) {\r\n  if (Array.isArray(arr)) return arr;\r\n}","export default function _iterableToArrayLimit(arr, i) {\r\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\r\n  var _arr = [];\r\n  var _n = true;\r\n  var _d = false;\r\n  var _e = undefined;\r\n\r\n  try {\r\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\r\n      _arr.push(_s.value);\r\n\r\n      if (i && _arr.length === i) break;\r\n    }\r\n  } catch (err) {\r\n    _d = true;\r\n    _e = err;\r\n  } finally {\r\n    try {\r\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\r\n    } finally {\r\n      if (_d) throw _e;\r\n    }\r\n  }\r\n\r\n  return _arr;\r\n}","export default function _nonIterableRest() {\r\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\r\n}","import arrayWithoutHoles from \"./arrayWithoutHoles\";\r\nimport iterableToArray from \"./iterableToArray\";\r\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\r\nimport nonIterableSpread from \"./nonIterableSpread\";\r\nexport default function _toConsumableArray(arr) {\r\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\r\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\r\nexport default function _arrayWithoutHoles(arr) {\r\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\r\n}","export default function _iterableToArray(iter) {\r\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\r\n}","export default function _nonIterableSpread() {\r\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\r\n}","import React, { lazy, useState } from 'react'\r\nimport {\r\n  CBadge,\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CRow,\r\n  CDataTable,\r\n  CModal,\r\n  CModalBody,\r\n  CModalFooter,\r\n  CModalHeader,\r\n  CModalTitle,\r\n  CForm,\r\n  CInput,\r\n  CLabel,\r\n  CFormGroup,\r\n  CSelect,\r\n  CTextarea,\r\n  CInputFile,\r\n  CToast,\r\n  CToastBody,\r\n  CToastHeader,\r\n  CToaster,\r\n  CTabContent,\r\n  CTabPane,\r\n  CTabs,\r\n  CNav,\r\n  CNavLink,\r\n  CLink\r\n} from '@coreui/react'\r\n\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst WidgetsDropdown = lazy(() => import('../widgets/WidgetsDropdown.js'))\r\n\r\nconst ongoingProjects = [\r\n  { id: 1, name: 'CS3240 Design Project', projectType: 'Module Project', projectIdentifier: 'CS3240', vacancy: '4/5', status: 'OPEN' },\r\n  { id: 2, name: 'NOC Startup. We are recruiting!', projectType: 'Public Project', projectIdentifier: 'Tech', vacancy: '5/5', status: 'ONGOING' },\r\n  { id: 3, name: 'IS4103 Capstone Project', projectType: 'Module Project', projectIdentifier: 'IS4103', vacancy: '4/4', status: 'ONGOING' },\r\n  { id: 4, name: 'IS3106 Front end development', projectType: 'Module Project', projectIdentifier: 'IS3106', vacancy: '4/5', status: 'OPEN' },\r\n]\r\n\r\nlet inbox = [\r\n  { id: 1, user: 'avatars/2.jpg', name: 'Tom Cruise', daysAgo: '3', message: 'Tom Cruise has invited you to join his project: IS4103 Capstone Project' },\r\n  { id: 2, user: 'avatars/3.jpg', name: 'Matt Damon', daysAgo: '3', message: 'Matt Damon has invited you to join his project: CS3240 Design Project' },\r\n  { id: 3, user: 'avatars/4.jpg', name: 'Sam Smith', daysAgo: '6', message: 'Sam Smith has invited you to join his project: IS3106 Final Project' },\r\n]\r\n\r\nlet outbox = [\r\n  { id: 1, user: 'avatars/2.jpg', name: 'Tom Cruise', daysAgo: '3', message: 'You requested to join Tom Cruise’s project: IS4444 Engineering Project', status: 'PENDING' },\r\n  { id: 2, user: 'avatars/3.jpg', name: 'Matt Damon', daysAgo: '3', message: 'You requested to join Matt Damon’s project: IS3333 Design Project', status: 'PENDING' },\r\n  { id: 3, user: 'avatars/4.jpg', name: 'Sam Smith', daysAgo: '6', message: 'You requested to join Sam Smith’s project: CS2102 Database Project', status: 'SUCCESS' },\r\n]\r\n\r\nconst getBadge = status => {\r\n  switch (status) {\r\n    case 'OPEN': return 'success'\r\n    case 'SUCCESS': return 'success'\r\n    case 'Inactive': return 'secondary'\r\n    case 'ONGOING': return 'warning'\r\n    case 'PENDING': return 'warning'\r\n    case 'CLOSED': return 'danger'\r\n    default: return 'primary'\r\n  }\r\n}\r\nconst fields = ['name', 'projectType', 'projectIdentifier', 'vacancy', 'status']\r\nconst inboxFields = ['user', 'name', 'message', 'actions']\r\nconst outboxFields = ['user', 'name', 'message', 'status']\r\nconst Dashboard = () => {\r\n  let counter = 4;\r\n  const [createProjectModal, setCreateProjectModal] = useState(false);\r\n  const [rejectRequestModal, setRejectRequestModal] = useState(false);\r\n  const [projectTitle, setProjectTitle] = useState('');\r\n  const [projectType, setProjectType] = useState('Module Project');\r\n  const [projectIdentifier, setProjectIdentifier] = useState('');\r\n  const [teamSize, setTeamSize] = useState('');\r\n  const [skills, setSkills] = useState('');\r\n  const [deadline, setDeadline] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [selectedRequestId, setSelectedRequestId] = useState(-1);\r\n\r\n  const handleProjectTitleChange = (event) => {\r\n    setProjectTitle(event.target.value);\r\n  }\r\n\r\n  const handleProjectTypeChange = (event) => {\r\n    setProjectType(event.target.value);\r\n  }\r\n\r\n  const handleProjectIdentifierChange = (event) => {\r\n    setProjectIdentifier(event.target.value);\r\n  }\r\n\r\n  const handleTeamSizeChange = (event) => {\r\n    setTeamSize(event.target.value);\r\n  }\r\n\r\n  const handleSkillsChange = (event) => {\r\n    setSkills(event.target.value);\r\n  }\r\n\r\n  const handleDeadlineChange = (event) => {\r\n    setDeadline(event.target.value);\r\n  }\r\n\r\n  const handleDescriptionChange = (event) => {\r\n    setDescription(event.target.value);\r\n  }\r\n\r\n  const createProject = () => {\r\n    console.log('creating new project');\r\n    const newProject = {\r\n      id: counter,\r\n      name: projectTitle,\r\n      projectType: projectType,\r\n      projectIdentifier: projectIdentifier,\r\n      vacancy: '1/' + teamSize,\r\n      status: 'OPEN',\r\n      description: description\r\n    }\r\n    ongoingProjects.unshift(newProject);\r\n    counter++;\r\n    setCreateProjectModal(!createProjectModal);\r\n    setToastMessage('Your project has been created.');\r\n    addToast();\r\n  }\r\n\r\n  const acceptRequest = (id) => {\r\n    inbox = inbox.filter(item => item.id !== id);\r\n    setToastMessage('You have accepted the project invitation successfully.');\r\n    addToast();\r\n  }\r\n\r\n  const prepareReject = (id) => {\r\n    setSelectedRequestId(id);\r\n    setRejectRequestModal(!rejectRequestModal);\r\n  }\r\n\r\n  const rejectRequest = () => {\r\n    let id = selectedRequestId;\r\n    inbox = inbox.filter(item => item.id !== id);\r\n    setToastMessage('You have rejected the project invitation successfully.');\r\n    setRejectRequestModal(!rejectRequestModal);\r\n    addToast();\r\n  }\r\n\r\n  const [toasts, setToasts] = useState([\r\n  ])\r\n\r\n  const [position] = useState('top-right')\r\n  const [autohide] = useState(true)\r\n  const [autohideValue] = useState(5000)\r\n  const [closeButton] = useState(true)\r\n  const [fade] = useState(true)\r\n  const [toastMessage, setToastMessage] = useState('');\r\n\r\n  const addToast = () => {\r\n    setToasts([\r\n      ...toasts,\r\n      { position, autohide: autohide && autohideValue, closeButton, fade }\r\n    ])\r\n  }\r\n  const toasters = (() => {\r\n    return toasts.reduce((toasters, toast) => {\r\n      toasters[toast.position] = toasters[toast.position] || []\r\n      toasters[toast.position].push(toast)\r\n      return toasters\r\n    }, {})\r\n  })()\r\n\r\n  const history = useHistory()\r\n\r\n  const pageChangeProject = () => {\r\n    history.push(`/project/:123`)\r\n  }\r\n\r\n  const pageChangeMyProject = () => {\r\n    history.push(`/my_project/:123`)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <WidgetsDropdown />\r\n      {Object.keys(toasters).map((toasterKey) => (\r\n        <CToaster\r\n          position={toasterKey}\r\n          key={'toaster' + toasterKey}\r\n        >\r\n          {\r\n            toasters[toasterKey].map((toast, key) => {\r\n              return (\r\n                <CToast\r\n                  key={'toast' + key}\r\n                  show={true}\r\n                  autohide={toast.autohide}\r\n                  fade={toast.fade}\r\n                >\r\n                  <CToastHeader closeButton={toast.closeButton} style={{ backgroundColor: \"green\", color: \"white\" }}>\r\n                    System Notification\r\n                   </CToastHeader>\r\n                  <CToastBody>\r\n                    {toastMessage}\r\n                  </CToastBody>\r\n                </CToast>\r\n              )\r\n            })\r\n          }\r\n        </CToaster>\r\n      ))}\r\n      <CCard>\r\n        <CCardHeader>\r\n          <CRow>\r\n            <CCol col=\"11\" sm=\"8\" md=\"8\" xl=\"10\">\r\n              <b>Ongoing projects</b>\r\n\r\n            </CCol>\r\n            <CCol col=\"1\" sm=\"4\" md=\"4\" xl=\"2\">\r\n              <CButton block color=\"info\" onClick={() => setCreateProjectModal(!createProjectModal)}>Create New Project</CButton>\r\n\r\n            </CCol>\r\n          </CRow>\r\n        </CCardHeader>\r\n        <CCardBody>\r\n          <CDataTable\r\n            items={ongoingProjects}\r\n            fields={fields}\r\n            striped\r\n            itemsPerPage={5}\r\n            pagination\r\n            scopedSlots={{\r\n              'name':\r\n                (item) => (\r\n                  <td>\r\n                    <CLink onClick={pageChangeMyProject}>{item.name}</CLink>\r\n                  </td>\r\n                ),\r\n              'status':\r\n                (item) => (\r\n                  <td>\r\n                    <CBadge color={getBadge(item.status)}>\r\n                      {item.status}\r\n                    </CBadge>\r\n                  </td>\r\n                )\r\n\r\n            }}\r\n          />\r\n        </CCardBody>\r\n      </CCard>\r\n\r\n      <CCard>\r\n        <CCardHeader>\r\n          <b>Inbox</b>\r\n        </CCardHeader>\r\n        <CCardBody>\r\n          <CTabs>\r\n            <CNav variant=\"tabs\">\r\n              <CNavLink>\r\n                Received\r\n              </CNavLink>\r\n              <CNavLink>\r\n                Sent\r\n              </CNavLink>\r\n            </CNav>\r\n            <CTabContent>\r\n              <CTabPane>\r\n                <CDataTable\r\n                  items={inbox}\r\n                  fields={inboxFields}\r\n                  striped\r\n                  itemsPerPage={5}\r\n                  pagination\r\n                  scopedSlots={{\r\n                    'user':\r\n                      (item) => (\r\n                        <td className=\"text-center\">\r\n                          <div className=\"c-avatar\">\r\n                            <img src={item.user} className=\"c-avatar-img\" alt=\"admin@bootstrapmaster.com\" />\r\n                            <span className=\"c-avatar-status bg-danger\"></span>\r\n                          </div>\r\n                        </td>\r\n                      ),\r\n                    'actions':\r\n                      (item) => (\r\n                        <td>\r\n                          <CRow>\r\n                            <CCol sm=\"12\" md=\"12\" l=\"4\" xl=\"4\">\r\n                              <CButton block color=\"info\" onClick={pageChangeProject}>View Project</CButton>\r\n                            </CCol>\r\n                            <CCol sm=\"12\" md=\"12\" l=\"4\" xl=\"4\">\r\n                              <CButton block color=\"success\" onClick={() => { acceptRequest(item.id) }}>Accept</CButton>\r\n                            </CCol>\r\n                            <CCol sm=\"12\" md=\"12\" l=\"4\" xl=\"4\">\r\n                              <CButton block color=\"danger\" onClick={() => { prepareReject(item.id) }}>Reject</CButton>\r\n                            </CCol>\r\n                          </CRow>\r\n                        </td>\r\n\r\n                      )\r\n                  }}\r\n                />\r\n              </CTabPane>\r\n              <CTabPane>\r\n                <CDataTable\r\n                  items={outbox}\r\n                  fields={outboxFields}\r\n                  striped\r\n                  itemsPerPage={5}\r\n                  pagination\r\n                  scopedSlots={{\r\n                    'user':\r\n                      (item) => (\r\n                        <td className=\"text-center\">\r\n                          <div className=\"c-avatar\">\r\n                            <img src={item.user} className=\"c-avatar-img\" alt=\"admin@bootstrapmaster.com\" />\r\n                            <span className=\"c-avatar-status bg-danger\"></span>\r\n                          </div>\r\n                        </td>\r\n                      ),\r\n                    'status':\r\n                      (item) => (\r\n                        <td>\r\n                          <CBadge color={getBadge(item.status)}>\r\n                            {item.status}\r\n                          </CBadge>\r\n                        </td>\r\n                      )\r\n                  }}\r\n                />\r\n              </CTabPane>\r\n            </CTabContent>\r\n          </CTabs>\r\n\r\n        </CCardBody>\r\n      </CCard>\r\n\r\n      <CModal\r\n        show={rejectRequestModal}\r\n        onClose={() => setRejectRequestModal(!rejectRequestModal)}\r\n        size=\"sm\">\r\n        <CModalHeader closeButton>\r\n          <CModalTitle>Reject Request</CModalTitle>\r\n        </CModalHeader>\r\n        <CModalBody>\r\n          <p>Are you sure you want to reject this request?</p>\r\n          <p>This action is irreversible.</p>\r\n        </CModalBody>\r\n        <CModalFooter>\r\n          <CButton color=\"danger\" onClick={() => rejectRequest(selectedRequestId)}>Reject</CButton>\r\n          <CButton color=\"secondary\" onClick={() => setRejectRequestModal(!rejectRequestModal)}>Cancel</CButton>\r\n        </CModalFooter>\r\n      </CModal>\r\n\r\n      <CModal\r\n        show={createProjectModal}\r\n        onClose={() => setCreateProjectModal(!createProjectModal)}\r\n        size=\"lg\"\r\n      >\r\n        <CModalHeader closeButton>\r\n          <CModalTitle><b>Create New Project</b></CModalTitle>\r\n        </CModalHeader>\r\n        <CModalBody>\r\n          <CForm>\r\n            <CFormGroup>\r\n              <CLabel>Project Title</CLabel>\r\n              <CInput type=\"text\" placeholder=\"Best project 2020\" autoComplete=\"projectTitle\" onChange={handleProjectTitleChange} />\r\n            </CFormGroup>\r\n\r\n            <CFormGroup>\r\n              <CLabel>Project Type</CLabel>\r\n              <CSelect label='Type' onChange={handleProjectTypeChange}>\r\n                <option>Module Project</option>\r\n                <option>Public Project</option>\r\n              </CSelect>\r\n            </CFormGroup>\r\n\r\n\r\n            <CRow>\r\n              <CCol sm='6' md='6'>\r\n                <CFormGroup>\r\n                  <CLabel>Project Identifier</CLabel>\r\n                  <CInput type=\"text\" placeholder=\"CS3240\" autoComplete=\"projectId\" onChange={handleProjectIdentifierChange} />\r\n                </CFormGroup>\r\n              </CCol>\r\n              <CCol sm='6' md='6'>\r\n                <CFormGroup>\r\n                  <CLabel>Team Size</CLabel>\r\n                  <CInput type=\"number\" placeholder=\"5\" autoComplete=\"teamSize\" onChange={handleTeamSizeChange} />\r\n                </CFormGroup>\r\n              </CCol>\r\n            </CRow>\r\n            <CFormGroup>\r\n              <CLabel>Skill Requirement</CLabel>\r\n              <CTextarea placeholder=\"JavaScript, Java, Python\" onChange={handleSkillsChange}></CTextarea>\r\n            </CFormGroup>\r\n\r\n            <CFormGroup>\r\n              <CLabel>Application Deadline</CLabel>\r\n              <CInput type=\"date\" id=\"date-input\" name=\"date-input\" placeholder=\"date\" onChange={handleDeadlineChange} />\r\n            </CFormGroup>\r\n\r\n            <CFormGroup>\r\n              <CLabel>Description</CLabel>\r\n              <CTextarea placeholder=\"wow such interesting description\" onChange={handleDescriptionChange}></CTextarea>\r\n            </CFormGroup>\r\n\r\n            <CFormGroup>\r\n              <CLabel>Project Display Picture (optional)</CLabel>\r\n              <CInputFile></CInputFile>\r\n            </CFormGroup>\r\n\r\n          </CForm>\r\n        </CModalBody>\r\n        <CModalFooter>\r\n          <CButton color=\"primary\" onClick={createProject}>Submit</CButton>\r\n          <CButton color=\"secondary\" onClick={() => setCreateProjectModal(!createProjectModal)}>Cancel</CButton>\r\n        </CModalFooter>\r\n      </CModal>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Dashboard\r\n"],"sourceRoot":""}